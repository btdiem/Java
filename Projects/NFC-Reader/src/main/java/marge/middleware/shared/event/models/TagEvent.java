package marge.middleware.shared.event.models;

import com.tikitag.ons.model.util.ClientId;
import com.tikitag.ons.model.util.ReaderId;
import com.tikitag.ons.model.util.TagId;
import com.tikitag.ons.model.util.TagInfo;
import com.tikitag.util.HexFormatter;

import marge.middleware.shared.event.specification.*;
/**
 * This class is an implementation of {@link IEvent} and extends from {@link TikitagEvent} </br>
 * It is an instance of events generated by Tikitag  </br>
 * @author btdiem </br>
 * @version 1.0 </br>
 *
 */
public class TagEvent extends TikitagEvent implements IEvent{
	
	//byte[] data;
	TagId tagId;
	TagInfo actionTag;
	TagInfo contextTag;
	
	public TagEvent(ClientId clientId, 
					ReaderId readerId, 
					IEventType eventType, 
					long timestamp,
					TagId tagId,
					TagInfo actionTag,
					TagInfo contextTag) throws IllegalArgumentException{
		
		super(clientId, readerId, eventType, timestamp);
		if (tagId == null){
			throw new IllegalArgumentException("TagId is NULL.");
		}
		this.actionTag = actionTag;
		this.contextTag = contextTag;
		this.tagId = tagId; 
	}
	
	public TagInfo getActionTag(){
		return actionTag;
	}
	public TagInfo getContextTag(){
		return this.contextTag;
	}
	/*
	 * (non-Javadoc)
	 * @see marge.middleware.shared.event.specification.TikitagEvent#getSource()
	 */
	@Override
	public String getSource() {
		return super.getSource() + ",TagId=" + tagId.getIdentifier();
	}
	/*
	 * Return 
	 * 	(non-Javadoc)
	 * @see marge.middleware.shared.event.specification.TikitagEvent#getData()
	 */
	@Override
	public String getData() {
		// TODO Auto-generated method stub
		String s = super.getData();
		if (actionTag != null){
			if (actionTag.getTagData() != null){
				s+= ",ActionTag Data=" + HexFormatter.toHexString(actionTag.getTagData());
			}
		}
		if (contextTag != null){
			if (contextTag.getTagData() != null){
				s+= ",ContextTag Data=" + HexFormatter.toHexString(contextTag.getTagData());
			}
		}
		return s;
	}

	@Override
	public String toString(){
		return "TAG EVENT["+super.toString() + "]";
	}

	@Override
	public int hashCode() {
		int result = super.hashCode();
		return 31 * result	+  tagId.hashCode();
	}

	@Override
	public boolean equals(Object obj) {
		return super.equals(obj) && (tagId.equals(((TagEvent)obj).getTagId()));
	}

	public TagId getTagId(){
		return this.tagId;
	}
	

}
